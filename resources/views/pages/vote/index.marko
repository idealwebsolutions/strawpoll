static {
  const { Agent } = require('https')
  const { get } = require('axios')
}

$ const PollProvider = get(`https://127.0.0.1:9000/api/v1/poll/${input.hash}`, {
  httpsAgent: new Agent({
    rejectUnauthorized: false
  })
})

$ const CommentProvider = get(`https://127.0.0.1:9000/api/v1/comments/${input.hash}`, {
  httpsAgent: new Agent({
    rejectUnauthorized: false
  })
})

import Base from '../../base.marko'

<${Base} title=input.title token=input.token>
  <@header>
    <main-navigation user=(input.user || {}) authenticated=input.authenticated />
  </@header>
  <@main>
    <div class="container">
      <await(PollProvider) client-reorder=true>
        <@placeholder>
          <h5 class="is-5 has-text-centered">Loading poll...</h5>
        </@placeholder>
        <@error>
          Failed to load.
        </@error>
        <@then|poll|>
          <poll-monitor-section user=(input.user || {}) poll=poll.data />
        </@then>
      </await>
      <div class="tile is-ancestor">
        <div class="tile is-5 is-parent">
          <div class="tile is-child box">
            <await(CommentProvider) client-reorder=true>
              <@placeholder>
                <h5 class="is-5 has-text-centered">Loading comments...</h5>
              </@placeholder>
              <@error>
                Failed to load.
              </@error>
              <@then|comments|>
                <comment-section authenticated=input.authenticated user=(input.user || {}) comments=comments.data />
              </@then>
            </await>
          </div>
        </div>
        <div class="tile is-parent">
          <div class="tile is-child box">
            <similar-polls-section />
          </div>
        </div>
      </div>
    </div>
  </@main>
</>
